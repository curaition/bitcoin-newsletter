[project]
name = "crypto-newsletter"
version = "0.1.0"
description = "AI-powered cryptocurrency newsletter with signal detection"
authors = [{name = "Rick", email = "rick@example.com"}]
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    # Core Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Database
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.0",
    "aiosqlite>=0.19.0",

    # Task Queue & Scheduling
    "celery[redis]>=5.3.0",
    "redis>=4.5.2,!=5.0.2,!=4.5.5,<6.0.0",

    # HTTP Client & API Integration
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",

    # Data Processing
    "pandas>=2.1.0",

    # AI/ML (for future phases)
    "pydantic-ai>=0.0.1",
    "google-generativeai>=0.3.0",

    # Utilities
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "factory-boy>=3.2.0",
    "freezegun>=1.2.0",
    "bandit[toml]>=1.7.0",
    "safety>=2.3.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
crypto-newsletter = "crypto_newsletter.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/crypto_newsletter"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP"]

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/crypto_newsletter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
]
