[tool:pytest]
# Pytest configuration for crypto newsletter

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --color=yes
    --durations=10
    --maxfail=5

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with external dependencies)
    slow: Slow tests (may take several seconds)
    api: Tests that require API access
    database: Tests that require database access
    redis: Tests that require Redis access
    celery: Tests that require Celery
    cli: Tests for CLI functionality
    web: Tests for web endpoints
    smoke: Smoke tests for basic functionality

# Test output
console_output_style = progress
junit_family = xunit2

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration (when using pytest-cov)
# These can be overridden by command line options
[coverage:run]
source = src/crypto_newsletter
omit = 
    */tests/*
    */migrations/*
    */venv/*
    */.venv/*
    */site-packages/*
    */conftest.py
    */test_*.py
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2
skip_covered = false

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
